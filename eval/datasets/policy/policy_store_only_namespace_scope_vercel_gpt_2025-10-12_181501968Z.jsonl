{"input":{"issue":"Create Kyverno policy: All deployments must specify replica count for high availability"},"output":"# MANDATORY SCHEMA-BY-SCHEMA ANALYSIS\n#\n# ReplicationController (v1): HAS spec.replicas but intent scope = Deployments only → Can skip\n# ReplicaSet (apps/v1): HAS spec.replicas but intent scope = Deployments only → Can skip\n# Deployment (apps/v1): HAS spec.replicas + Kubernetes-native → MUST generate rule\n# postgresql.cnpg.io/Cluster (v1): HAS spec.instances but CRD not a Deployment → Can skip\n# HorizontalPodAutoscaler (autoscaling/v2): Controls replicas externally, not a Deployment → Can skip\n# DaemonSet (apps/v1): NO spec.replicas (schedules to all nodes) → Can skip\n# StatefulSet (apps/v1): HAS spec.replicas but intent scope = Deployments only → Can skip\n# wgpolicyk8s.io/ClusterPolicyReport (v1alpha2): Reporting only → Can skip\n# ResourceQuota (v1): No replica fields → Can skip\n# postgresql.cnpg.io/ScheduledBackup (v1): No replica fields → Can skip\n# PodDisruptionBudget (policy/v1): No replica fields → Can skip\n# LimitRange (v1): No replica fields → Can skip\n# Pod (v1): No controller replicas field → Can skip\n# Node (v1): No replica fields → Can skip\n# kyverno.io/ClusterPolicy (v1): Policy CRD, not relevant → Can skip\n# wgpolicyk8s.io/PolicyReport (v1alpha2): Reporting only → Can skip\n# wgpolicyk8s.io/ClusterPolicyReport (v1alpha2): Reporting only → Can skip\n# reports.kyverno.io/ClusterEphemeralReport (v1): Reporting only → Can skip\n# postgresql.cnpg.io/Pooler (v1): HAS spec.instances but CRD not a Deployment → Can skip\n# Service (v1): No replica fields → Can skip\n# ComponentStatus (v1): Deprecated, no replica fields → Can skip\n# PersistentVolumeClaim (v1): No replica fields → Can skip\n# reports.kyverno.io/ClusterEphemeralReport (v1): Reporting only (duplicate entry) → Can skip\n# wgpolicyk8s.io/PolicyReport (v1alpha2): Reporting only (duplicate entry) → Can skip\n# CronJob (batch/v1): No controller replicas field; uses job completions/parallelism → Can skip\n# networking.k8s.io/IPAddress (v1): No replica fields → Can skip\n# PersistentVolume (v1): No replica fields → Can skip\n# PriorityClass (scheduling.k8s.io/v1): No replica fields → Can skip\n# ConfigMap (v1): No replica fields → Can skip\n# StorageClass (storage.k8s.io/v1): No replica fields → Can skip\n# CustomResourceDefinition (apiextensions.k8s.io/v1): No replica fields → Can skip\n# kyverno.io/Policy (v1): Policy CRD, not relevant → Can skip\n# Ingress (networking.k8s.io/v1): No replica fields → Can skip\n# Namespace (v1): No replica fields → Can skip\n# Event (v1): No replica fields → Can skip\n# Endpoints (v1): No replica fields → Can skip\n# CertificateSigningRequest (certificates.k8s.io/v1): No replica fields → Can skip\n# VolumeAttributesClass (storage.k8s.io/v1): No replica fields → Can skip\n# reports.kyverno.io/EphemeralReport (v1): Reporting only → Can skip\n# policies.kyverno.io/ImageValidatingPolicy (v1alpha1): Not relevant → Can skip\n# ServiceAccount (v1): No replica fields → Can skip\n# postgresql.cnpg.io/Backup (v1): No replica fields → Can skip\n# kyverno.io/UpdateRequest (v2): Kyverno internal, not relevant → Can skip\n# kyverno.io/ClusterCleanupPolicy (v2): Not relevant → Can skip\n# policies.kyverno.io/ImageValidatingPolicy (v1alpha1) (duplicate): Not relevant → Can skip\n# kyverno.io/ClusterCleanupPolicy (v2) (duplicate): Not relevant → Can skip\n# NetworkPolicy (networking.k8s.io/v1): No replica fields → Can skip\n# policies.kyverno.io/MutatingPolicy (v1alpha1): Not relevant → Can skip\n# policies.kyverno.io/MutatingPolicy (v1alpha1) (duplicate): Not relevant → Can skip\n# reports.kyverno.io/EphemeralReport (v1) (duplicate): Reporting only → Can skip\n#\n# RESOURCES REQUIRING VALIDATION RULES: apps/v1/Deployment\napiVersion: kyverno.io/v1\nkind: ClusterPolicy\nmetadata:\n  name: require-deployment-replicas-min-2-c7eb3fc3\n  labels:\n    policy-intent/id: c7eb3fc3-90be-4e29-84b7-77809c39107d\n  annotations:\n    policy-intent/description: \"All deployments must specify replica count for high availability\"\n    policy-intent/rationale: \"Ensures high availability by requiring multiple instances\"\nspec:\n  background: false\n  validationFailureAction: Enforce\n  rules:\n    - name: require-replicas-on-deployments\n      match:\n        any:\n          - resources:\n              kinds:\n                - apps/v1/Deployment\n              operations:\n                - CREATE\n                - UPDATE\n      validate:\n        cel:\n          expressions:\n            - expression: >-\n                has(object.spec) && has(object.spec.replicas) && object.spec.replicas >= 2\n              message: \"Deployments must set spec.replicas to 2 or more to ensure high availability\"","performance":{"duration_ms":109519,"input_tokens":136591,"output_tokens":3246,"total_tokens":139837,"sdk":"vercel","model_version":"gpt-5","iterations":1,"tool_calls_executed":0,"cache_read_tokens":0,"cache_creation_tokens":0},"metadata":{"timestamp":"2025-10-12T18:15:01.968Z","complexity":"medium","tags":["troubleshooting"],"source":"integration_test","tool":"policy","test_scenario":"policy-kyverno-generation","failure_analysis":""}}
