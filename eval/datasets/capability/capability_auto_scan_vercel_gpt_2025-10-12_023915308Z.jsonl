{"input":{"issue":"Analyze capabilities of Kubernetes resource: StatefulSet"},"output":"{\n  \"capabilities\": [\n    \"stateful pods\",\n    \"stable DNS and hostname\",\n    \"persistent volume claims\",\n    \"volumeClaimTemplates\",\n    \"pod ordering (OrderedReady, Parallel)\",\n    \"rolling updates (partition, maxUnavailable)\",\n    \"PVC retention policy\",\n    \"serviceName-based networking\",\n    \"affinity and anti-affinity scheduling\",\n    \"topology spread constraints\",\n    \"tolerations and node selectors\",\n    \"health probes (liveness, readiness, startup)\",\n    \"init containers\",\n    \"ephemeral containers\",\n    \"security context\",\n    \"resource requests and limits\",\n    \"CSI driver volumes\",\n    \"revision history tracking\"\n  ],\n  \"providers\": [\n    \"aws\",\n    \"azure\",\n    \"gce\",\n    \"openstack\",\n    \"vsphere\",\n    \"photon\",\n    \"portworx\",\n    \"scaleio\",\n    \"storageos\",\n    \"ceph\",\n    \"glusterfs\",\n    \"quobyte\",\n    \"flocker\",\n    \"iscsi\",\n    \"nfs\",\n    \"csi\"\n  ],\n  \"abstractions\": [\n    \"stateful workload orchestration\",\n    \"stable network and storage identity\",\n    \"persistent storage provisioning via PVC templates\",\n    \"ordered and partitioned rolling updates\",\n    \"pod scheduling and placement controls\",\n    \"health checks and lifecycle hooks\",\n    \"security and resource governance\"\n  ],\n  \"complexity\": \"high\",\n  \"description\": \"Represents a set of Pods with consistent identities, providing stable DNS/hostnames and persistent storage via VolumeClaims, and guaranteeing the mapping between network and storage identities.\",\n  \"useCase\": \"Deploy and manage stateful applications that require stable identities and persistent storage with controlled rollout behavior.\",\n  \"confidence\": 0.86\n}","performance":{"duration_ms":62802,"input_tokens":11353,"output_tokens":2620,"total_tokens":13973,"sdk":"vercel","model_version":"gpt-5","iterations":1,"tool_calls_executed":0,"cache_read_tokens":0,"cache_creation_tokens":0},"metadata":{"timestamp":"2025-10-12T02:39:15.308Z","complexity":"medium","tags":["troubleshooting"],"source":"integration_test","tool":"capability","test_scenario":"capability-inference","failure_analysis":""}}
