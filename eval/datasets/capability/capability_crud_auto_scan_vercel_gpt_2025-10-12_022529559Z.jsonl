{"input":{"issue":"Analyze capabilities of Kubernetes resource: Service"},"output":"{\n  \"capabilities\": [\n    \"cluster-internal virtual IP (ClusterIP)\",\n    \"node port exposure (NodePort)\",\n    \"external load balancer integration (LoadBalancer)\",\n    \"external name mapping (ExternalName)\",\n    \"selector-based pod targeting\",\n    \"port and targetPort mapping\",\n    \"multi-protocol support (TCP, UDP, SCTP)\",\n    \"session affinity (ClientIP)\",\n    \"external traffic policy control\",\n    \"internal traffic policy control\",\n    \"dual-stack IP family policy\",\n    \"external IPs assignment\",\n    \"load balancer IP/class/source ranges\",\n    \"health check node port\",\n    \"app protocol hinting\",\n    \"publish not ready addresses\",\n    \"traffic distribution configuration\",\n    \"load balancer status and ingress reporting\"\n  ],\n  \"providers\": [\"kubernetes\"],\n  \"abstractions\": [\n    \"stable virtual endpoint for a set of pods\",\n    \"in-cluster load balancing\",\n    \"external access abstraction (NodePort/LoadBalancer/ExternalName)\",\n    \"session affinity management\",\n    \"traffic policy control (internal/external)\",\n    \"dual-stack IP family management\"\n  ],\n  \"complexity\": \"medium\",\n  \"description\": \"A named network abstraction that exposes one or more ports and routes traffic to selected pods, with options for ClusterIP, NodePort, LoadBalancer, or ExternalName. Supports protocol selection, session affinity, traffic policies, dual-stack IPs, and load balancer configuration.\",\n  \"useCase\": \"Expose and load-balance access to a group of pods via a stable endpoint inside or outside the cluster.\",\n  \"confidence\": 0.9\n}","performance":{"duration_ms":27389,"input_tokens":1674,"output_tokens":1755,"total_tokens":3429,"sdk":"vercel","model_version":"gpt-5","iterations":1,"tool_calls_executed":0,"cache_read_tokens":0,"cache_creation_tokens":0},"metadata":{"timestamp":"2025-10-12T02:25:29.559Z","complexity":"medium","tags":["troubleshooting"],"source":"integration_test","tool":"capability","test_scenario":"capability-inference","failure_analysis":""}}
